name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            .build
            ~/Library/Developer/Xcode/DerivedData
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

      - name: Select Xcode
        run: sudo xcode-select -s "/Applications/Xcode.app/Contents/Developer"

      - name: Swift version
        run: swift --version

      - name: Install Spectral
        run: npm install -g @stoplight/spectral-cli

      - name: Lint OpenAPI (Spectral)
        run: spectral lint openapi/**/*.yaml

      - name: Build OpenAPI docs (ReDocly)
        run: |
          npm install -g @redocly/cli@latest
          mkdir -p build
          redocly build-docs openapi/layoutkit.yaml -o build/layoutkit.html

      - name: Upload OpenAPI docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-docs
          path: build/layoutkit.html

      - name: Build (triggers OpenAPI generation)
        run: swift build -v

      - name: Test
        run: swift test -q

      - name: Smoke test NIO server
        run: |
          swift run -c release LayoutKitNIOServer &
          SRV=$!
          sleep 2
          curl -sS -X GET http://127.0.0.1:8080/health -o /dev/null -w "%{http_code}\n" | grep -q 200
          curl -sS -X POST http://127.0.0.1:8080/layout/page \
            -H 'accept: application/json' -H 'content-type: application/json' \
            -d '{"widthPt":200,"heightPt":100,"margins":{"top":10,"left":10,"right":10,"bottom":10}}' | jq 'has("commands")' | grep -q true
          kill $SRV || true

      - name: Emit generated sources summary
        if: always()
        run: |
          echo "Generated files:" || true
          find .build/plugins/outputs -name '*.swift' -maxdepth 6 | sed 's#^# - #'
